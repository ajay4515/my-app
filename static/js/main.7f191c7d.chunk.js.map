{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","name","value","defaultChecked","onClick","theme","htmlFor","console","log","Textform","word","_useState","useState","_useState2","Object","slicedToArray","Text","setText","length","newText","split","textPreview","readingTime","slice","btn","document","querySelectorAll","i","element","style","backgroundColor","color","heading","onChange","event","target","rows","toUpperCase","showAlert","toLowerCase","text","getElementById","select","navigator","clipboard","writeText","join","upperText","charAt","upperStr","toFixed","Alert","alert","role","lower","capitalize","msg","defaultProps","aboutTxt","App","myStyle","setMyStyle","_useState3","_useState4","setAlert","message","setTimeout","_useState5","_useState6","setTheme","bgColor","bodyBG","body","aria-checked","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7f191c7d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link}  from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  const themeDefault = () =>{\r\n    props.theme('blue', 'white', '#eaeaea')\r\n  }\r\n  const themeGreen = () =>{\r\n    props.theme('Green', 'white', '#b1d2b1')\r\n    console.log('theme green');\r\n  }\r\n  const themeRed = () =>{\r\n    props.theme('Red', 'white', '#d2b1b1')\r\n  }\r\n  return (\r\n    <>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\"  href=\"/\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutTxt}</Link>\r\n              </li> */}\r\n            </ul>\r\n            <div className=\"color-paletes navbar-nav\">\r\n              <div className=\"form-check form-check-inline nav-item\">\r\n                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"default-theme\" value=\"option1\" defaultChecked onClick={themeDefault}/>\r\n                <label className=\"form-check-label nav-link\" htmlFor=\"default-theme\">Default</label>\r\n              </div>\r\n              <div className=\"form-check form-check-inline nav-item\">\r\n                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"green-theme\" value=\"option1\" onClick={themeGreen}/>\r\n                <label className=\"form-check-label nav-link\" htmlFor=\"green-theme\">Green</label>\r\n              </div>\r\n              <div className=\"form-check form-check-inline nav-item\">\r\n                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"red-theme\" value=\"option1\" onClick={themeRed}/>\r\n                <label className=\"form-check-label nav-link\" htmlFor=\"red-theme\">Red</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutTxt: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    aboutTxt: 'About text here'\r\n}","import React,{useState} from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const [Text, setText] = useState('');\r\n    // setText('Enter Your Text Here');\r\n    const onChangeHandler = (event)=>{\r\n        // console.log('OnChange');\r\n        setText(event.target.value)\r\n    };\r\n    const handleUpClick = () =>{\r\n      // console.log('clicked');\r\n      const newText = Text.toUpperCase();\r\n      setText(newText)\r\n      props.showAlert(\"Converted to upper case\",\"success\")\r\n\r\n    }\r\n    const handleLoClick = () =>{\r\n      // console.log('clicked');\r\n      const newText = Text.toLowerCase();\r\n      setText(newText)\r\n      props.showAlert(\"Converted to lower case\",\"success\")\r\n\r\n    }\r\n    // setText('new text')\r\n    const clearText = () =>{\r\n      const newText = '';\r\n      setText(newText);\r\n      props.showAlert(\"Text Cleared\",\"success\")\r\n\r\n    }\r\n    const handleCopy = () =>{\r\n      let text = document.getElementById('txtarea');\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Text copied\",\"success\")\r\n\r\n    }\r\n    const handleExtraSpaces = () =>{\r\n      let newText = Text.split(/[ ]+/)\r\n      setText(newText.join(' '))\r\n      props.showAlert(\"Removed Extra Spaces\",\"success\")\r\n\r\n    }\r\n\r\n    let word;\r\n    // let wordTwo = [];\r\n    if (Text.length < 1) {\r\n      word = Text.length\r\n    } else {\r\n      // Text.trim()\r\n      // wordTwo.join(Text.split(\" \"))\r\n      // console.log(wordTwo);\r\n      let newText = Text.split(/[ ]+/)\r\n      if (newText[newText.length - 1] === '' ) {\r\n        word = newText.length - 1\r\n        // console.log(`\"${newText[newText.length - 1]}\"`);\r\n      } else {\r\n        word = newText.length\r\n      }\r\n      // console.log(newText);\r\n      // console.log(Text.length)\r\n    }\r\n\r\n    let readingTime = 0.0133 * word\r\n    let textPreview;\r\n    if (Text.length <= 500) {\r\n      textPreview = Text\r\n    } else {\r\n      textPreview = Text.slice(0, 500) + '.....';\r\n    }\r\n\r\n    const handleCapitalizeFirstLetter =() => {\r\n      let upperText = Text.split(\" \");\r\n      for (let i = 0; i < upperText.length; i++) {\r\n        upperText[i] = upperText[i].charAt(0).toUpperCase() + upperText[i].slice(1) \r\n        // console.log(upperText);\r\n      }\r\n      let upperStr = upperText.join(\" \")\r\n      // console.log(upperStr);\r\n      setText(upperStr)\r\n    }\r\n    const btn = document.querySelectorAll('.btn');\r\n    console.log(btn);\r\n    // btn.style.backgroundColor = props.theme.backgroundColor;\r\n    for (let i = 0; i < btn.length; i++) {\r\n      const element = btn[i];\r\n      element.style.backgroundColor = props.theme.backgroundColor\r\n      element.style.color = props.theme.color\r\n      \r\n    }\r\n    \r\n  return (\r\n    <>\r\n      <div className='utilities-inner' >\r\n          <div className=\"mb-3\">\r\n          \r\n          <div className=\"text-box\">\r\n            <label htmlFor=\"txtarea\" className=\"form-label\"><h3>{props.heading}</h3></label>\r\n            <textarea className=\"form-control\" value={Text} onChange={onChangeHandler} id=\"txtarea\" rows=\"8\" style={{backgroundColor: props.mode==='black'?'white':'grey', color: props.mode==='black'?'black':'white'}}></textarea>\r\n            <button className=\"btn mt-3 mr-2\" onClick={handleUpClick}>Convert Upper Case</button>\r\n            <button className=\"btn mt-3 mx-2\" onClick={handleLoClick}>Convert Lower Case</button>\r\n            <button className=\"btn mt-3 mx-2\" onClick={clearText}>Clear Text</button>\r\n            <button className=\"btn mt-3 mx-2\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn mt-3 mx-2\" onClick={handleExtraSpaces}>Clear Extra Spaces</button>\r\n            <button className=\"btn mt-3 mx-2\" onClick={handleCapitalizeFirstLetter}>Capitalize First Letter of Each Word</button>\r\n            {/* <button className=\"btn mt-3 mx-2\" onClick={handleCapitalizeFirstword}>Capitalize First Letter of Each Sentence</button> */}\r\n\r\n          </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"analysis\">\r\n        <h2>Your text analysis...</h2>\r\n        <p>{word} words and {Text.length} characters</p>\r\n        <p>{readingTime.toFixed(1)} Minutes read</p>\r\n      </div>\r\n      <div className=\"preview\">\r\n        <h2>Preview</h2>\r\n        <p>{textPreview.length>0?textPreview:'Enter Text In the box above to preview here'}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\n\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textform  from './components/Textform';\nimport Alert from './components/Alert'\n// import About from './components/About';\nimport React,{useState} from 'react'\n// import {\n//   BrowserRouter as Router,\n//   Routes ,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [myStyle, setMyStyle] = useState({\n    color: 'black',\n    // backgroundColor: '#eaeaea'\n  })\n\n  const darkMode = () => {\n    if (myStyle.color === 'black') {\n      setMyStyle({\n        color: 'white',\n      })\n      showAlert(\"Dark mode has been enabled\",\"success\")\n      document.body.style.backgroundColor = 'rgb(47 64 96)'\n    } else {\n      setMyStyle({\n        color: 'black',\n      })\n      showAlert(\"Light mode has been enabled\",\"success\")\n      document.body.style.backgroundColor = '#eaeaea'\n    }\n  }\n  const[alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg : message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n  const[theme, setTheme] =   useState({\n    backgroundColor : 'blue',\n    color: 'white',\n  })\n  const themeSelector = (bgColor, color, bodyBG) =>{\n    setTheme({\n      backgroundColor : bgColor,\n      color: color\n    })\n    document.body.style.backgroundColor = bodyBG\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" aboutTxt=\"about TextUtils\" mode={myStyle.color==='black'?'light':'dark'} theme={themeSelector}/>\n    <Alert alert={alert}/>\n    <div className=\"container-fluid\" style={myStyle} >\n      <div className=\"container text-form-container\">\n          <div id='dark-mode-switch' className=\"form-check form-switch\">\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"dark-mode-switcher\" onClick={darkMode} aria-checked='false'/>\n            <label className=\"form-check-label\" htmlFor=\"dark-mode-switcher\">Dark Mode</label>\n          </div>\n          {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element={<About />}> */}\n            \n          {/* </Route> */}\n          {/* <Route exact path=\"/\" element={<Textform showAlert={showAlert} heading=\"Enter Your Text Below\"  mode={myStyle.color} theme={theme}/>}> */}\n          <Textform showAlert={showAlert} heading=\"Enter Your Text Below\"  mode={myStyle.color} theme={theme}/>\n          {/* </Route> */}\n        {/* </Routes> */}\n      </div>\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}