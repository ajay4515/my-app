{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","name","value","defaultChecked","onClick","theme","htmlFor","console","log","Textform","textPreview","_useState","useState","_useState2","Object","slicedToArray","Text","setText","readingTime","split","filter","element","length","Array","slice","btn","document","querySelectorAll","i","style","backgroundColor","color","heading","onChange","event","target","rows","navigator","clipboard","readText","then","cliptext","showAlert","newText","toUpperCase","toLowerCase","join","upperText","charAt","upperStr","text","getElementById","select","writeText","toFixed","Alert","alert","role","word","lower","capitalize","msg","About","aria-labelledby","data-bs-parent","defaultProps","aboutTxt","App","myStyle","setMyStyle","_useState3","_useState4","setAlert","message","setTimeout","_useState5","_useState6","setTheme","bgColor","bodyBG","body","aria-checked","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.282b4348.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  const themeDefault = () =>{\r\n    props.theme('blue', 'white', '#eaeaea')\r\n  }\r\n  const themeGreen = () =>{\r\n    props.theme('Green', 'white', '#b1d2b1')\r\n    console.log('theme green');\r\n  }\r\n  const themeRed = () =>{\r\n    props.theme('Red', 'white', '#d2b1b1')\r\n  }\r\n  return (\r\n    <>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\"  to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\"  to=\"/about\">About</Link>\r\n              </li>\r\n            </ul>\r\n            <div className=\"color-paletes navbar-nav\">\r\n              <div className=\"form-check form-check-inline nav-item\">\r\n                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"default-theme\" value=\"option1\" defaultChecked onClick={themeDefault}/>\r\n                <label className=\"form-check-label nav-link\" htmlFor=\"default-theme\">Default</label>\r\n              </div>\r\n              <div className=\"form-check form-check-inline nav-item\">\r\n                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"green-theme\" value=\"option1\" onClick={themeGreen}/>\r\n                <label className=\"form-check-label nav-link\" htmlFor=\"green-theme\">Green</label>\r\n              </div>\r\n              <div className=\"form-check form-check-inline nav-item\">\r\n                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"red-theme\" value=\"option1\" onClick={themeRed}/>\r\n                <label className=\"form-check-label nav-link\" htmlFor=\"red-theme\">Red</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutTxt: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    aboutTxt: 'About text here'\r\n}","import React,{useState} from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const [Text, setText] = useState('');\r\n    // setText('Enter Your Text Here');\r\n    const onChangeHandler = (event)=>{\r\n        // console.log('OnChange');\r\n        setText(event.target.value)\r\n    };\r\n    const handleUpClick = () =>{\r\n      // console.log('clicked');\r\n      const newText = Text.toUpperCase();\r\n      setText(newText)\r\n      props.showAlert(\"Converted to upper case\",\"success\")\r\n\r\n    }\r\n    const handleLoClick = () =>{\r\n      // console.log('clicked');\r\n      const newText = Text.toLowerCase();\r\n      setText(newText)\r\n      props.showAlert(\"Converted to lower case\",\"success\")\r\n\r\n    }\r\n    // setText('new text')\r\n    const clearText = () =>{\r\n      const newText = '';\r\n      setText(newText);\r\n      props.showAlert(\"Text Cleared\",\"success\")\r\n\r\n    }\r\n    const handleCopy = () =>{\r\n      let text = document.getElementById('txtarea');\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Text copied\",\"success\")\r\n    }\r\n    const handlePaste = () =>{\r\n      navigator.clipboard.readText().then(cliptext=>( setText(cliptext)));\r\n      props.showAlert(\"Text pasted\",\"success\")\r\n    }\r\n    const handleExtraSpaces = () =>{\r\n      let newText = Text.split(/[ ]+/)\r\n      setText(newText.join(' '))\r\n      props.showAlert(\"Removed Extra Spaces\",\"success\")\r\n    }\r\n\r\n    // let word;\r\n    // if (Text.length < 1) {\r\n    //   word = Text.length\r\n    // } else {\r\n    //   // let newText = Text.split(/[ ]+/)\r\n    //   let newText = Text.split(\" \")\r\n    //   newText.filter((element)=>{return element!==\"\"});\r\n    //   if (newText[newText.length - 1] === '' ) {\r\n    //     word = newText.length - 1\r\n    //   } else {\r\n    //     word = newText.length\r\n    //   }\r\n    // }\r\n    let word = Text.split(\" \").filter((element)=>{return element.length!==0}).length;\r\n    let readingTime = 0.0133 * word\r\n    let textPreview;\r\n    if (Text.length <= 500) {\r\n      textPreview = Text\r\n    } else {\r\n      textPreview = Array(Text).slice(0, 500) + '.....';\r\n    }\r\n    const handleCapitalizeFirstLetter =() => {\r\n      let upperText = Text.split(\" \");\r\n      for (let i = 0; i < upperText.length; i++) {\r\n        upperText[i] = upperText[i].charAt(0).toUpperCase() + upperText[i].slice(1) \r\n        // console.log(upperText);\r\n      }\r\n      let upperStr = upperText.join(\" \")\r\n      // console.log(upperStr);\r\n      setText(upperStr)\r\n    }\r\n    const btn = document.querySelectorAll('.btn');\r\n    // btn.style.backgroundColor = props.theme.backgroundColor;\r\n    for (let i = 0; i < btn.length; i++) {\r\n      const element = btn[i];\r\n      element.style.backgroundColor = props.theme.backgroundColor\r\n      element.style.color = props.theme.color\r\n      \r\n    }\r\n    \r\n  return (\r\n    <>\r\n      <div className='utilities-inner' >\r\n          <div className=\"mb-3\">\r\n          \r\n          <div className=\"text-box\">\r\n            <label htmlFor=\"txtarea\" className=\"form-label\"><h3>{props.heading}</h3></label>\r\n            <textarea className=\"form-control\" value={Text} onChange={onChangeHandler} id=\"txtarea\" rows=\"8\" style={{backgroundColor: props.mode==='black'?'white':'grey', color: props.mode==='black'?'black':'white'}}></textarea>\r\n            <button className=\"btn mt-3 mx-2\" id='pasteButton' onClick={handlePaste}>Paste</button>\r\n            <button className=\"btn mt-3 mr-2\" onClick={handleUpClick}>Convert Upper Case</button>\r\n            <button className=\"btn mt-3 mx-2\" onClick={handleLoClick}>Convert Lower Case</button>\r\n            <button className=\"btn mt-3 mx-2\" onClick={clearText}>Clear Text</button>\r\n            <button className=\"btn mt-3 mx-2\" onClick={handleExtraSpaces}>Clear Extra Spaces</button>\r\n            <button className=\"btn mt-3 mx-2\" onClick={handleCapitalizeFirstLetter}>Capitalize First Letter of Each Word</button>\r\n            <button className=\"btn mt-3 mx-2\" onClick={handleCopy}>Copy Text</button>\r\n            {/* <button className=\"btn mt-3 mx-2\" onClick={handleCapitalizeFirstword}>Capitalize First Letter of Each Sentence</button> */}\r\n\r\n          </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"analysis\">\r\n        <h2>Your text analysis...</h2>\r\n        <p>{Text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {Text.length} characters</p>\r\n        <p>{readingTime.toFixed(1)} Minutes read</p>\r\n      </div>\r\n      <div className=\"preview\">\r\n        <h2>Preview</h2>\r\n        <p>{Text.length>0?textPreview:'Enter Text In the box above to preview here'}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\n\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport Textform  from './components/Textform';\r\nimport Alert from './components/Alert'\r\nimport About from './components/About';\r\nimport React,{useState} from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes ,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  const [myStyle, setMyStyle] = useState({\r\n    color: 'black',\r\n    // backgroundColor: '#eaeaea'\r\n  })\r\n\r\n  const darkMode = () => {\r\n    if (myStyle.color === 'black') {\r\n      setMyStyle({\r\n        color: 'white',\r\n      })\r\n      showAlert(\"Dark mode has been enabled\",\"success\")\r\n      document.body.style.backgroundColor = 'rgb(47 64 96)'\r\n    } else {\r\n      setMyStyle({\r\n        color: 'black',\r\n      })\r\n      showAlert(\"Light mode has been enabled\",\"success\")\r\n      document.body.style.backgroundColor = '#eaeaea'\r\n    }\r\n  }\r\n  const[alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg : message,\r\n      type: type\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null)\r\n    }, 1500);\r\n  }\r\n  const[theme, setTheme] =   useState({\r\n    backgroundColor : 'blue',\r\n    color: 'white',\r\n  })\r\n  const themeSelector = (bgColor, color, bodyBG) =>{\r\n    setTheme({\r\n      backgroundColor : bgColor,\r\n      color: color\r\n    })\r\n    document.body.style.backgroundColor = bodyBG\r\n  }\r\n  return (\r\n    <>\r\n    <Router>\r\n    <Navbar title=\"TextUtils\" aboutTxt=\"about TextUtils\" mode={myStyle.color==='black'?'light':'dark'} theme={themeSelector}/>\r\n    <Alert alert={alert}/>\r\n    <div className=\"container-fluid\" style={myStyle} >\r\n      <div className=\"container text-form-container\">\r\n          <div id='dark-mode-switch' className=\"form-check form-switch\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"dark-mode-switcher\" onClick={darkMode} aria-checked='false'/>\r\n            <label className=\"form-check-label\" htmlFor=\"dark-mode-switcher\">Dark Mode</label>\r\n          </div>\r\n          <Routes>\r\n            <Route exact path=\"/about\" element={<About />}>\r\n              \r\n            </Route>\r\n            <Route exact path=\"/\" element={<Textform showAlert={showAlert} heading=\"Enter Your Text Below\"  mode={myStyle.color} theme={theme}/>}>\r\n            {/* <Textform showAlert={showAlert} heading=\"Enter Your Text Below\"  mode={myStyle.color} theme={theme}/> */}\r\n            </Route>\r\n          </Routes>\r\n      </div>\r\n    </div>\r\n    </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}